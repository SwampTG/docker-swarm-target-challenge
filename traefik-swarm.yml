version: '3.8'

services:
  traefik:
    image: traefik:latest
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - traefik.enable=true
      # Use the traefik-public network (declared below)
      # - traefik.docker.network=net-1
      - "traefik.http.services.traefik-public.loadbalancer.server.port=9080"
      # Use the special Traefik service api@internal with the web UI/Dashboard
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`traefik.${OPEN_DNS_8080}`)"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmmode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
      - "--accesslog"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      # - "--providers.docker.network=net-1"
      - "--providers.docker.swarmModeRefreshSeconds=15s"
      # - "--providers.docker.constraints=Label(\"traefik.enable=true\")"
      - "--api"
      - "--api.dashboard=true"
      # - "--providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
      - "8085:8085"
      - "8086:8086"
      - "8087:8087"
      - "8088:8088"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - net-1
      - net-2
    deploy:
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == manager

networks:
  net-1:
    external: true
  net-2:
    external: true
